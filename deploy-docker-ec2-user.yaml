---
- name: Install python3,  docker and docker-compose
  hosts: docker_server
  become: yes # every install here is done with root user hence the placement of this
  gathering_facts: False
  tasks:
    - name: Install python3, and docker
      vars: #this module allows python2 as interpreter for yum modules to install docker and other packages
        ansible_python_interpreter: /usr/bin/python
      yum:
        name:
          - python3
          - docker
        update_cache: yes
        state: present
    - name: Install Docker-compose
      get_url:
        url: https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-{{lookup('pipe', 'uname -m')}}"
        dest: /usr/local/bin/docker-compose
        mode: +x
    - name: Start docker
      systemd:
        name: docker
        state: started
    - name: Install docker python module # This is to enable the docker-image community module to be used
      pip:
        name: 
          - docker
          - docker-compose

- name: Add ec2-user to docker group
  hosts: docker_server
  become: yes
  tasks:
    - name: Add ec2-user to docker group
      user:
        name: ec2-user
        groups: docker
        append: yes  # this appends docker group to the already existing group. this takes effect only when we reconnect to the server. this is addressed below
    - name: Reconnect to server session
      meta: reset_connection

- name: Start docker containers
  host: docker_server
  vars_files:
    - project-vars

  tasks:
    - name: Copy docker compose
      copy:
        src: /Users/ayaba/this_is_the_path_to_where_you_will_find-the_docker_compose_file
        dest: /home/ec2-user/docker-compose.yaml
    - name: Docker login
      docker_login:
       registry_url:https://index.docker.io/v1/
       username: abendong
       password: "{{password}}" #providing password as an external variable file or interactive prompt
    - name: Start container from compose
      docker_compose:
        project_src: /home/ec2-user








